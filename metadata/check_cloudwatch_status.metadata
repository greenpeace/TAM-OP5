[commands]
check_cloudwatch_ec2_cpu_utilization=$USER1$/check_aws/check_cloudwatch_status.rb -a $HOSTADDRESS$ -i $ARG1$ -f $ARG2$ -C CPUUtilization --warning $ARG3$ --critical $ARG4$
check_cloudwatch_ec2_network_in=$USER1$/check_aws/check_cloudwatch_status.rb -a $HOSTADDRESS$ -i $ARG1$ -f $ARG2$ -C NetworkIn --warning $ARG3$ --critical $ARG4$
check_cloudwatch_ec2_network_out=$USER1$/check_aws/check_cloudwatch_status.rb -a $HOSTADDRESS$ -i $ARG1$ -f $ARG2$ -C NetworkOut --warning $ARG3$ --critical $ARG4$
check_cloudwatch_ec2_disk_write_ops=$USER1$/check_aws/check_cloudwatch_status.rb -a $HOSTADDRESS$ -i $ARG1$ -f $ARG2$ -C DiskWriteOps --warning $ARG3$ --critical $ARG4$
check_cloudwatch_ec2_disk_write_bytes=$USER1$/check_aws/check_cloudwatch_status.rb -a $HOSTADDRESS$ -i $ARG1$ -f $ARG2$ -C DiskWriteBytes --warning $ARG3$ --critical $ARG4$
check_cloudwatch_ec2_disk_read_ops=$USER1$/check_aws/check_cloudwatch_status.rb -a $HOSTADDRESS$ -i $ARG1$ -f $ARG2$ -C DiskReadOps --warning $ARG3$ --critical $ARG4$
check_cloudwatch_ec2_disk_read_bytes=$USER1$/check_aws/check_cloudwatch_status.rb -a $HOSTADDRESS$ -i $ARG1$ -f $ARG2$ -C DiskReadBytes --warning $ARG3$ --critical $ARG4$
check_cloudwatch_elb_latency=$USER1$/check_aws/check_cloudwatch_status.rb -a $HOSTADDRESS$ -i $ARG1$ -f $ARG2$ -L Latency --warning $ARG3$ --critical $ARG4$
check_cloudwatch_elb_request_count=$USER1$/check_aws/check_cloudwatch_status.rb -a $HOSTADDRESS$ -i $ARG1$ -f $ARG2$ -L RequestCount --warning $ARG3$ --critical $ARG4$
check_cloudwatch_elb_healthy_host_count=$USER1$/check_aws/check_cloudwatch_status.rb -a $HOSTADDRESS$ -i $ARG1$ -f $ARG2$ -L HealthyHostCount --warning $ARG3$ --critical $ARG4$
check_cloudwatch_elb_unhealthy_host_count=$USER1$/check_aws/check_cloudwatch_status.rb -a $HOSTADDRESS$ -i $ARG1$ -f $ARG2$ -L UnHealthyHostCount --warning $ARG3$ --critical $ARG4$
check_cloudwatch_rds_cpu_utilization=$USER1$/check_aws/check_cloudwatch_status.rb -a $HOSTADDRESS$ -i $ARG1$ -f $ARG2$ -D CPUUtilization --warning $ARG3$ --critical $ARG4$
check_cloudwatch_rds_free_storage_space=$USER1$/check_aws/check_cloudwatch_status.rb -a $HOSTADDRESS$ -i $ARG1$ -f $ARG2$ -D FreeStorageSpace --warning $ARG3$ --critical $ARG4$
check_cloudwatch_rds_database_connections=$USER1$/check_aws/check_cloudwatch_status.rb -a $HOSTADDRESS$ -i $ARG1$ -f $ARG2$ -D DatabaseConnections --warning $ARG3$ --critical $ARG4$
check_cloudwatch_rds_read_iops=$USER1$/check_aws/check_cloudwatch_status.rb -a $HOSTADDRESS$ -i $ARG1$ -f $ARG2$ -D ReadIOPS --warning $ARG3$ --critical $ARG4$
check_cloudwatch_rds_write_iops=$USER1$/check_aws/check_cloudwatch_status.rb -a $HOSTADDRESS$ -i $ARG1$ -f $ARG2$ -D WriteIOPS --warning $ARG3$ --critical $ARG4$
check_cloudwatch_rds_read_latency=$USER1$/check_aws/check_cloudwatch_status.rb -a $HOSTADDRESS$ -i $ARG1$ -f $ARG2$ -D ReadLatency --warning $ARG3$ --critical $ARG4$
check_cloudwatch_rds_write_latency=$USER1$/check_aws/check_cloudwatch_status.rb -a $HOSTADDRESS$ -i $ARG1$ -f $ARG2$ -D WriteLatency --warning $ARG3$ --critical $ARG4$
check_cloudwatch_rds_read_throughput=$USER1$/check_aws/check_cloudwatch_status.rb -a $HOSTADDRESS$ -i $ARG1$ -f $ARG2$ -D ReadThroughput --warning $ARG3$ --critical $ARG4$
check_cloudwatch_rds_write_throughput=$USER1$/check_aws/check_cloudwatch_status.rb -a $HOSTADDRESS$ -i $ARG1$ -f $ARG2$ -D WriteThroughput --warning $ARG3$ --critical $ARG4$

[name]
check_cloudwatch_status

[info]
Monitor matrics from any of your instances in Amazon Web Services EC2, ELB or RDS

[why]
To be able to keep track of how your instances are doing without installing any agents.
You will be able to check things like CPU, NetWork, Disk etc.

[how]
This plugin matrics of an instance on Amazon Web Service EC2, ELB or RDS using Amazon CloudWatch API.
The Amazon credentials will be read from an encrypted file. When using the Amazon CloudWatch API you will be able to monitor the staus of your instances without installing an agent or using SNMP. All you need to do is to create a readonly user and a and create a key pair. Add the key pair and the credential keys to the op5 Monitor server and you are ready to go.

[keywords]
amazon,aws

[platforms]
Amazon Web Services

[categories]
Misc

[support]
5

[tags]
amazon, web services, aws, ec2, elb, rds, cpu, network, disk, load balancing
